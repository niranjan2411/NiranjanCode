4. Design Twitter
○ Platform: LeetCode
○ Link: https: leetcode.com/problems/design-twitter/description/

class Twitter {
    //userId -- > {time , tweetId}
    unordered_map<int , vector<pair<int , int>>> tweets ;
    //userId -> the people the follow 
    unordered_map<int , set<int>>following ;
    int time ;
public:
    Twitter(){
        time = 0 ;
    } 
    
    void postTweet(int userId, int tweetId) {
       tweets[userId].push_back({time , tweetId}) ;
       time++ ;
    }
    
    vector<int> getNewsFeed(int userId) {
        vector<int> ans ;
        priority_queue<pair<int , int>> pq ;
        for(auto tweet: tweets[userId]){
            pq.push(tweet) ;
        }

        for(auto followee : following[userId]){
            for(auto tweet : tweets[followee]){
                pq.push(tweet) ;
            }
        }

        while(ans.size() < 10 && !pq.empty()){
            ans.push_back(pq.top().second) ;
            pq.pop() ;
        }

        return ans ;

    }
    
    void follow(int followerId, int followeeId) {
        following[followerId].insert(followeeId) ;
    }
    
    void unfollow(int followerId, int followeeId) {
        following[followerId].erase(followeeId) ;
    }
};